package gui.produto;

import classes.Peca;
import classes.Produto;
import classes.Servico;
import excecoes.CampoVazioException;
import excecoes.cliente.ClienteNaoEncontradoException;
import excecoes.produto.peca.PecaNaoEncontradaException;
import excecoes.produto.peca.PecaReferenciadaException;
import excecoes.produto.PrecoInvalidoException;
import excecoes.produto.ProdutoNaoEncontradoException;
import excecoes.produto.peca.QuantidadeEstoqueInvalidaException;
import excecoes.produto.servico.ServicoNaoEncontradoException;
import excecoes.produto.servico.ServicoReferenciadoException;
import gui.Mensagem;
import java.awt.Rectangle;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import oficina.Oficina;

public class JanelaProdutos extends javax.swing.JFrame {

    private ArrayList<Produto> produtos = new ArrayList<Produto>();
    private ArrayList<Peca> pecas;
    private ArrayList<Servico> servicos;
    
    public JanelaProdutos(ArrayList<Peca> pecas, ArrayList<Servico> servicos) {
        initComponents();
        this.pecas = pecas;
        this.servicos = servicos;
        
        ListSelectionModel selectionModel = tableProdutos.getSelectionModel();
        selectionModel.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                botaoEditar.setEnabled(true);
                botaoApagar.setEnabled(true);
            }
        });
        
        atualizarTabela();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tabelaScrollPane = new javax.swing.JScrollPane();
        tableProdutos = new javax.swing.JTable();
        botaoEditar = new javax.swing.JButton();
        botaoApagar = new javax.swing.JButton();
        botaoProcurar = new javax.swing.JButton();
        panelCadastrarProduto = new javax.swing.JPanel();
        labelTipo = new javax.swing.JLabel();
        labelDescricao = new javax.swing.JLabel();
        textDescricao = new javax.swing.JTextField();
        labelPreco = new javax.swing.JLabel();
        textPreco = new javax.swing.JTextField();
        labelEstoque = new javax.swing.JLabel();
        textEstoque = new javax.swing.JTextField();
        labelDuracao = new javax.swing.JLabel();
        labelDias = new javax.swing.JLabel();
        textHoras = new javax.swing.JTextField();
        labelHoras = new javax.swing.JLabel();
        textDias = new javax.swing.JTextField();
        labelMinutos = new javax.swing.JLabel();
        textMinutos = new javax.swing.JTextField();
        botaoCadastrar = new javax.swing.JButton();
        radioPeca = new javax.swing.JRadioButton();
        radioServico = new javax.swing.JRadioButton();
        labelSegundos = new javax.swing.JLabel();
        textSegundos = new javax.swing.JTextField();
        labelDescricaoLocalizar = new javax.swing.JLabel();
        textLocalizar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Produtos - Controle de Oficina");

        tabelaScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Produtos"));

        tableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo", "Código", "Descrição", "Preço", "Estoque", "Duração"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProdutos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaScrollPane.setViewportView(tableProdutos);

        botaoEditar.setText("Editar");
        botaoEditar.setEnabled(false);
        botaoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditarActionPerformed(evt);
            }
        });

        botaoApagar.setText("Apagar");
        botaoApagar.setEnabled(false);
        botaoApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoApagarActionPerformed(evt);
            }
        });

        botaoProcurar.setText("Localizar");
        botaoProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoProcurarActionPerformed(evt);
            }
        });

        panelCadastrarProduto.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastrar produto"));

        labelTipo.setText("Tipo:");

        labelDescricao.setText("Descrição:");

        labelPreco.setText("Preço:");

        labelEstoque.setText("Estoque:");

        labelDuracao.setText("Duração");
        labelDuracao.setEnabled(false);

        labelDias.setText("Dias:");
        labelDias.setEnabled(false);

        textHoras.setEnabled(false);

        labelHoras.setText("Horas:");
        labelHoras.setEnabled(false);

        labelMinutos.setText("Minutos:");
        labelMinutos.setEnabled(false);

        textMinutos.setEnabled(false);

        botaoCadastrar.setText("Cadastrar");
        botaoCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioPeca);
        radioPeca.setSelected(true);
        radioPeca.setText("Peça");
        radioPeca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioPecaItemStateChanged(evt);
            }
        });

        buttonGroup1.add(radioServico);
        radioServico.setText("Serviço");

        labelSegundos.setText("Segundos:");
        labelSegundos.setEnabled(false);

        textSegundos.setEnabled(false);

        javax.swing.GroupLayout panelCadastrarProdutoLayout = new javax.swing.GroupLayout(panelCadastrarProduto);
        panelCadastrarProduto.setLayout(panelCadastrarProdutoLayout);
        panelCadastrarProdutoLayout.setHorizontalGroup(
            panelCadastrarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCadastrarProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCadastrarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(labelDuracao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelEstoque, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPreco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelDescricao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelTipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCadastrarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCadastrarProdutoLayout.createSequentialGroup()
                        .addComponent(radioPeca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioServico)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(textEstoque)
                    .addComponent(textDescricao)
                    .addComponent(textPreco)
                    .addGroup(panelCadastrarProdutoLayout.createSequentialGroup()
                        .addComponent(labelDias)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textDias, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelHoras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textHoras, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelMinutos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelSegundos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textSegundos, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoCadastrar)))
                .addContainerGap())
        );
        panelCadastrarProdutoLayout.setVerticalGroup(
            panelCadastrarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCadastrarProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCadastrarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTipo)
                    .addComponent(radioPeca)
                    .addComponent(radioServico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCadastrarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDescricao)
                    .addComponent(textDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCadastrarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPreco)
                    .addComponent(textPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCadastrarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEstoque)
                    .addComponent(textEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCadastrarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelCadastrarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelDias)
                        .addComponent(textHoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelHoras)
                        .addComponent(labelMinutos)
                        .addComponent(textDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelSegundos)
                        .addComponent(textSegundos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(botaoCadastrar))
                    .addComponent(labelDuracao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9))
        );

        labelDescricaoLocalizar.setText("Descrição:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelCadastrarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelDescricaoLocalizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textLocalizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoProcurar))
                    .addComponent(tabelaScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botaoEditar)
                        .addGap(18, 18, 18)
                        .addComponent(botaoApagar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDescricaoLocalizar)
                    .addComponent(textLocalizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoProcurar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabelaScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoEditar)
                    .addComponent(botaoApagar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCadastrarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditarActionPerformed
        String titulo = "Editar Peça";
        int linha = tableProdutos.getSelectedRow();
        
        int codigo = Integer.parseInt((String) tableProdutos.getValueAt(linha, 1));
        String tipo = (String)tableProdutos.getValueAt(linha, 0);
        if(tipo == "Peça")
        {
            Peca peca;
            try {
                peca = Oficina.buscarPeca(codigo);
                new EdicaoPeca(peca, this);
            } catch (PecaNaoEncontradaException ex) {
                Mensagem.exibirMensagemErro(titulo, ex.getMessage());
            }
            
        }
        else if (tipo == "Serviço")
        {
            Servico servico;
            try {
                servico = Oficina.buscarServico(codigo);
                new EdicaoServico(servico, this);
            } catch (ServicoNaoEncontradoException ex) {
                Mensagem.exibirMensagemErro(titulo, ex.getMessage());
            } 
        }
    }//GEN-LAST:event_botaoEditarActionPerformed

    private void botaoApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoApagarActionPerformed
        String titulo = "Excluir Produto";
        int linha = this.tableProdutos.getSelectedRow();
        int codigo = Integer.parseInt((String) this.tableProdutos.getValueAt(linha, 1));
        
        try {
                if(this.tableProdutos.getValueAt(linha, 0) == "Peça")
                {
                    Oficina.excluirPeca(codigo);
                    Mensagem.exibirMensagem(titulo, "Peça excluída com sucesso");

                }
                else if(this.tableProdutos.getValueAt(linha, 0) == "Serviço")
                {
                    Oficina.excluirServico(codigo);
                    Mensagem.exibirMensagem(titulo, "Serviço excluído com sucesso");
                }
                this.atualizarTabela();
                botaoEditar.setEnabled(false);
                botaoApagar.setEnabled(false);
            } catch (PecaReferenciadaException | PecaNaoEncontradaException | ServicoReferenciadoException | ServicoNaoEncontradoException ex) {
                Mensagem.exibirMensagemErro(titulo, ex.getMessage());
            }
        
    }//GEN-LAST:event_botaoApagarActionPerformed

    private void botaoProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoProcurarActionPerformed
        String titulo = "Localizar Produto";
        String descricao = textLocalizar.getText();
        boolean encontrado = false;
           
        for(int i = 0; i < tableProdutos.getRowCount() && !encontrado; i++){
            if(tableProdutos.getValueAt(i, 2).equals(descricao)){
                tableProdutos.setRowSelectionInterval(i, i);
                tableProdutos.scrollRectToVisible(new Rectangle(tableProdutos.getCellRect(i, 0, true)));
                encontrado = true;
            }
        }
        
        if (!encontrado) {
            Mensagem.exibirMensagemErro(titulo, new ProdutoNaoEncontradoException().getMessage());
        }
    }//GEN-LAST:event_botaoProcurarActionPerformed

    private void botaoCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastrarActionPerformed
        String titulo = "Cadastro de Produto";
        
        String descricao;
        double preco;
        int estoque;
        int dia,hora,minuto,segundo;
        
        descricao = textDescricao.getText();
        try {
            preco = Double.parseDouble(textPreco.getText());
            if(radioPeca.isSelected())
            {
                estoque = Integer.parseInt(textEstoque.getText());
                Peca peca = new Peca(estoque, descricao, preco);
                pecas.add(peca);
                produtos.add(peca);       
            }
            else
            {
                dia = Integer.parseInt(textDias.getText());
                hora = Integer.parseInt(textHoras.getText());
                minuto = Integer.parseInt(textMinutos.getText());
                segundo = Integer.parseInt(textSegundos.getText());
                Servico servico = new Servico(descricao, preco, dia, hora, minuto, segundo);
                servicos.add(servico);
                produtos.add(servico);
            }
        } catch(PrecoInvalidoException | QuantidadeEstoqueInvalidaException | CampoVazioException e) {
            Mensagem.exibirMensagemErro(titulo, e.getMessage());
        } catch(NumberFormatException e) {
            Mensagem.exibirMensagemErro(titulo, "Algum campo numérico está com um valor inválido ou vazio");
        }
        
        atualizarTabela(); 
    }//GEN-LAST:event_botaoCadastrarActionPerformed

    private void radioPecaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioPecaItemStateChanged
        if(radioPeca.isSelected())
        {
           labelDuracao.setEnabled(false);
           labelDias.setEnabled(false);
           labelHoras.setEnabled(false);
           labelMinutos.setEnabled(false);
           labelSegundos.setEnabled(false);
           textDias.setEnabled(false);
           textHoras.setEnabled(false);
           textMinutos.setEnabled(false);
           textSegundos.setEnabled(false);
       
           labelEstoque.setEnabled(true);
           textEstoque.setEnabled(true);
        }
        else
        {
            labelEstoque.setEnabled(false);
            textEstoque.setEnabled(false);
            
            labelDuracao.setEnabled(true);
            labelDias.setEnabled(true);
            labelHoras.setEnabled(true);
            labelMinutos.setEnabled(true);
            labelSegundos.setEnabled(true);
            textDias.setEnabled(true);
            textHoras.setEnabled(true);
            textMinutos.setEnabled(true);
            textSegundos.setEnabled(true);
        }
    }//GEN-LAST:event_radioPecaItemStateChanged

    /**
     * @param args the command line arguments
     */
    
    public void recuperarProdutos(ArrayList<Peca> pecas, ArrayList<Servico> servicos)
    {
        for (Peca peca : pecas) {
            this.produtos.add(peca);
        }
        for (Servico servico : servicos) {
            this.produtos.add(servico);
        }
        
    }
    
    public void atualizarTabela()
    {
        produtos.clear();
        recuperarProdutos(pecas, servicos);
        DefaultTableModel tabela = (DefaultTableModel)this.tableProdutos.getModel();
        
        tabela.setRowCount(0);
        
        String tipo;
        String codigo;
        String preco;
        String descricao;
        Collections.sort(produtos);
        for (Produto produto : this.produtos) {
            
            codigo = String.valueOf(produto.getCodigo());
            preco = String.valueOf(produto.getPreco());
            descricao = produto.getDescricao();
            String qtdEstoque = "";
            String tempoDuracao = "";
            if(produto instanceof Peca)
            {
                tipo = "Peça";
                qtdEstoque = String.valueOf(((Peca) produto).getQtdeEstoque());
                
                Object [] dado = {tipo,codigo,descricao,preco,qtdEstoque,tempoDuracao};
                tabela.addRow(dado);
            }
            else if(produto instanceof Servico)
            {
                tipo = "Serviço";
                tempoDuracao = ((Servico)produto).getTempoExecucaoString();
                
                Object [] dado = {tipo,codigo,descricao,preco,qtdEstoque,tempoDuracao};
                tabela.addRow(dado);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoApagar;
    private javax.swing.JButton botaoCadastrar;
    private javax.swing.JButton botaoEditar;
    private javax.swing.JButton botaoProcurar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel labelDescricao;
    private javax.swing.JLabel labelDescricaoLocalizar;
    private javax.swing.JLabel labelDias;
    private javax.swing.JLabel labelDuracao;
    private javax.swing.JLabel labelEstoque;
    private javax.swing.JLabel labelHoras;
    private javax.swing.JLabel labelMinutos;
    private javax.swing.JLabel labelPreco;
    private javax.swing.JLabel labelSegundos;
    private javax.swing.JLabel labelTipo;
    private javax.swing.JPanel panelCadastrarProduto;
    private javax.swing.JRadioButton radioPeca;
    private javax.swing.JRadioButton radioServico;
    private javax.swing.JScrollPane tabelaScrollPane;
    private javax.swing.JTable tableProdutos;
    private javax.swing.JTextField textDescricao;
    private javax.swing.JTextField textDias;
    private javax.swing.JTextField textEstoque;
    private javax.swing.JTextField textHoras;
    private javax.swing.JTextField textLocalizar;
    private javax.swing.JTextField textMinutos;
    private javax.swing.JTextField textPreco;
    private javax.swing.JTextField textSegundos;
    // End of variables declaration//GEN-END:variables
}
