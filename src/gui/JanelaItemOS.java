package gui;

import classes.ItemOS;
import classes.OrdemServico;
import classes.Peca;
import classes.Servico;
import excecoes.itemos.AdicionarItemOSNaoAbertaException;
import excecoes.produto.peca.EstoqueInsuficienteException;
import excecoes.itemos.ItemNaoEncontradoException;
import excecoes.produto.peca.PecaNaoEncontradaException;
import excecoes.QuantidadeInvalidaException;
import excecoes.itemos.RemoverItemOSNaoAbertaException;
import excecoes.produto.servico.ServicoNaoEncontradoException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import oficina.Oficina;

/**
 *
 * @author joovitor
 */
public class JanelaItemOS extends javax.swing.JFrame {

    private OrdemServico ordemServico;
    private JanelaOS jos;
    
    public JanelaItemOS(OrdemServico ordemServico, JanelaOS jos) {
        initComponents();
        this.ordemServico = ordemServico;
        this.jos = jos;
        atualizarTabela();
        
        
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        bApagar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        bProcurar = new javax.swing.JButton();
        tProcurar = new javax.swing.JTextField();
        bResetar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        rPeca = new javax.swing.JRadioButton();
        rServico = new javax.swing.JRadioButton();
        jQuantidade = new javax.swing.JLabel();
        tQuantidade = new javax.swing.JTextField();
        bCadastrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        bApagar.setText("Apagar");
        bApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bApagarActionPerformed(evt);
            }
        });

        jLabel4.setText("Descrição:");

        bProcurar.setText("Procurar");
        bProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bProcurarActionPerformed(evt);
            }
        });

        bResetar.setText("Resetar");
        bResetar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetarActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Produtos"));

        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo", "Preço", "Quantidade", "Código", "Descrição", "Preço uni", "Estoque", "Duração"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaProdutos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tabelaProdutos);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Adicionar Produto"));

        jLabel1.setText("Codigo:");

        jLabel2.setText("Tipo do produto:");

        buttonGroup1.add(rPeca);
        rPeca.setSelected(true);
        rPeca.setText("Peça");

        buttonGroup1.add(rServico);
        rServico.setText("Serviço");

        jQuantidade.setText("Quantidade:");

        bCadastrar.setText("Cadastrar");
        bCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jQuantidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rPeca)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rServico))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(245, 245, 245)
                        .addComponent(bCadastrar)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(rPeca)
                    .addComponent(rServico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jQuantidade)
                    .addComponent(tQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bCadastrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tProcurar)
                        .addGap(18, 18, 18)
                        .addComponent(bProcurar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bResetar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 544, Short.MAX_VALUE)
                        .addComponent(bApagar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bProcurar)
                    .addComponent(bResetar))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bApagar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bApagarActionPerformed
        String titulo = "Excluir Item";
        
        int linha = this.tabelaProdutos.getSelectedRow();
        int codigo = Integer.parseInt((String) this.tabelaProdutos.getValueAt(linha, 3));
        String tipo = (String) this.tabelaProdutos.getValueAt(linha, 0);
        
       if(tipo == "Peça")
       {
            try {
                Oficina.excluirItemOSPeca(ordemServico, codigo);
                atualizarTabela();
            } catch (RemoverItemOSNaoAbertaException ex) {
                Mensagem.exibirMensagemErro(titulo, ex.getMessage());
            } catch (ItemNaoEncontradoException ex) {
                Mensagem.exibirMensagemErro(titulo, ex.getMessage());
            }
       }else if(tipo == "Serviço"){
            try {
                Oficina.excluirItemOSServico(ordemServico, codigo);
                atualizarTabela();
            } catch (RemoverItemOSNaoAbertaException ex) {
                Mensagem.exibirMensagemErro(titulo, ex.getMessage());
            } catch (ItemNaoEncontradoException ex) {
                Mensagem.exibirMensagemErro(titulo, ex.getMessage());
            }
       }
    }//GEN-LAST:event_bApagarActionPerformed

    private void bProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bProcurarActionPerformed
        //produtosEcontrados();
    }//GEN-LAST:event_bProcurarActionPerformed

    private void bResetarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetarActionPerformed
        atualizarTabela();
    }//GEN-LAST:event_bResetarActionPerformed

    private void bCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCadastrarActionPerformed
        String titulo = "Cadastro de item";
        
        int codigoProd = Integer.parseInt(tCodigo.getText());
        if(rPeca.isSelected())
        {
            try {
                Peca peca = Oficina.buscarPeca(codigoProd);
                Oficina.adicionarItemOSPeca(ordemServico, peca, Integer.parseInt(tQuantidade.getText()));
            } catch (PecaNaoEncontradaException ex) {
                Mensagem.exibirMensagemErro(titulo, ex.getMessage());
            } catch (AdicionarItemOSNaoAbertaException ex) {
                Mensagem.exibirMensagemErro(titulo, ex.getMessage());
            } catch (EstoqueInsuficienteException ex) {
                Mensagem.exibirMensagemErro(titulo, ex.getMessage());
            } catch (QuantidadeInvalidaException ex) {
                Mensagem.exibirMensagemErro(titulo, ex.getMessage());
            }
        }else{
            try
            {
                Servico servico = Oficina.buscarServico(codigoProd);
                Oficina.adicionarItemOSServico(ordemServico, servico, Integer.parseInt(tQuantidade.getText()));
            }catch(ServicoNaoEncontradoException | AdicionarItemOSNaoAbertaException | QuantidadeInvalidaException ex){
                Mensagem.exibirMensagemErro(titulo, ex.getMessage());
            }
        }
        atualizarTabela();
        this.jos.atualizarTabela();
    }//GEN-LAST:event_bCadastrarActionPerformed

    public void atualizarTabela()
    {
        String titulo = "";
        
        DefaultTableModel tabela = (DefaultTableModel)this.tabelaProdutos.getModel();
        
        while(tabela.getRowCount() > 0)
        {
            tabela.removeRow(0);
        }
        
        String tipo = "";
        String preco;
        String qtd;
        String codigo;
        String descricao;
        String precoUni;
        String estoque = "";
        String duracao = "";
        for (ItemOS itemOS : this.ordemServico.getItensOS()) {
            if(itemOS.getTipo()=='P')
            {
                tipo = "Peça";
                Peca peca;
                try {
                    peca = Oficina.buscarPeca(itemOS.getProduto().getCodigo());
                    estoque = peca.getQtdeEstoque()+"";
                } catch (PecaNaoEncontradaException ex) {
                    Mensagem.exibirMensagemErro(titulo, ex.getMessage());
                }     
            }else if(itemOS.getTipo()=='S'){
                tipo = "Serviço";
                Servico servico;
                try {
                    servico = Oficina.buscarServico(itemOS.getProduto().getCodigo());
                    duracao = servico.getTempoExecucaoString();
                } catch (ServicoNaoEncontradoException ex) {
                    Mensagem.exibirMensagemErro(titulo, ex.getMessage());
                }    
            }
            preco = itemOS.getPreco()+"";
            qtd = itemOS.getQtde()+"";
            codigo = itemOS.getProduto().getCodigo()+"";
            descricao = itemOS.getProduto().getDescricao();
            precoUni = itemOS.getProduto().getPreco()+"";
            
            Object[] dados = {tipo,preco,qtd,codigo,descricao,precoUni,estoque,duracao};
            tabela.addRow(dados);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bApagar;
    private javax.swing.JButton bCadastrar;
    private javax.swing.JButton bProcurar;
    private javax.swing.JButton bResetar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel jQuantidade;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rPeca;
    private javax.swing.JRadioButton rServico;
    private javax.swing.JTextField tCodigo;
    private javax.swing.JTextField tProcurar;
    private javax.swing.JTextField tQuantidade;
    private javax.swing.JTable tabelaProdutos;
    // End of variables declaration//GEN-END:variables
}
