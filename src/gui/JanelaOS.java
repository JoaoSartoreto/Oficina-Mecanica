/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import classes.OrdemServico;
import excecoes.OSNaoAbertaException;
import excecoes.OSNaoEncontradaException;
import interfaces.Interface;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import oficina.Oficina;

/**
 *
 * @author joovitor
 */
public class JanelaOS extends javax.swing.JFrame {

    private ArrayList<OrdemServico> ordensServico;
    
    public JanelaOS(ArrayList<OrdemServico> ordensServico) {
        initComponents();
        this.ordensServico = ordensServico;
        atualizarTabela();
        
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaOS = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tProcurar = new javax.swing.JTextField();
        bProcurar = new javax.swing.JButton();
        bResetar = new javax.swing.JButton();
        bGerenciar = new javax.swing.JButton();
        bAbrirOS = new javax.swing.JButton();
        bExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabelaOS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Data", "Previsão Termino", "Termino", "Placa", "Situação", "Preço", "Proprietario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaOS);

        jLabel1.setText("NumeroOS:");

        bProcurar.setText("Procurar");
        bProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bProcurarActionPerformed(evt);
            }
        });

        bResetar.setText("Resetar");
        bResetar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetarActionPerformed(evt);
            }
        });

        bGerenciar.setText("Gerenciar OS");
        bGerenciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGerenciarActionPerformed(evt);
            }
        });

        bAbrirOS.setText("Abir nova OS");
        bAbrirOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAbrirOSActionPerformed(evt);
            }
        });

        bExcluir.setText("Excluir");
        bExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addComponent(bProcurar)
                        .addGap(18, 18, 18)
                        .addComponent(bResetar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bExcluir)
                        .addGap(18, 18, 18)
                        .addComponent(bGerenciar)
                        .addGap(29, 29, 29)
                        .addComponent(bAbrirOS)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bProcurar)
                    .addComponent(bResetar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bGerenciar)
                    .addComponent(bAbrirOS)
                    .addComponent(bExcluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bProcurarActionPerformed
        osEncontrada();
    }//GEN-LAST:event_bProcurarActionPerformed

    private void bResetarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetarActionPerformed
       atualizarTabela();
    }//GEN-LAST:event_bResetarActionPerformed

    private void bGerenciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGerenciarActionPerformed
        String titulo = "OS não encontrada";
        
        int linha = tabelaOS.getSelectedRow();
        int numOS = Integer.parseInt((String) tabelaOS.getValueAt(linha, 0));
        try
        {
            OrdemServico os = Oficina.buscarOS(numOS);
            new JanelaGerenciarOS(os,this);
        }catch(OSNaoEncontradaException ex){
            Interface.exibirMensagemErro(titulo, ex.getMessage());
        }
    }//GEN-LAST:event_bGerenciarActionPerformed

    private void bAbrirOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAbrirOSActionPerformed
        new JanelaAbrirOS(ordensServico, this);
    }//GEN-LAST:event_bAbrirOSActionPerformed

    private void bExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExcluirActionPerformed
        String titulo = "OS não encontrada";
        
        int linha = tabelaOS.getSelectedRow();
        int numOS = Integer.parseInt((String) tabelaOS.getValueAt(linha, 0));
        try
        {
            Oficina.excluirOS(numOS);
            atualizarTabela();
        }catch(OSNaoAbertaException | OSNaoEncontradaException ex){
            Interface.exibirMensagemErro(titulo, ex.getMessage());
        }
    }//GEN-LAST:event_bExcluirActionPerformed

    public void atualizarTabela()
    {
        DefaultTableModel tabela = (DefaultTableModel)this.tabelaOS.getModel();
        
        while(tabela.getRowCount() > 0)
        {
            tabela.removeRow(0);
        }
        
        String numOS;
        String dataOS;
        String dataPrev;
        String dataTermino;
        String placa;
        String situacao = "";
        String valor = "";
        String proprietario;
    
        for (OrdemServico OS : ordensServico) {
            numOS = OS.getNumeroOS()+"";
            dataOS = OS.getDataOS().toString();
            dataPrev = OS.getDataPrevTermino().toString();
            if(OS.getDataTermino()==null)
            {
                dataTermino = "null";
            }else{
                dataTermino = OS.getDataTermino().toString();
            }  
            placa = OS.getPlacaCarro();
            if(OS.getSituação()=='A')
            {
                situacao = "Aberta";
                valor = OS.getValorOS()+"";
            }else if(OS.getSituação()=='C'){
                situacao = "Cancelada";
                valor = "0.0";
            }else if(OS.getSituação()=='F'){
                situacao = "Finalizada";
                valor = OS.getValorOS()+"";
            }
            
            proprietario = OS.getCliente().getNome();
            
            Object[] dados = {numOS,dataOS,dataPrev,dataTermino,placa,situacao,
                valor,proprietario};
            tabela.addRow(dados);
        }
        
    }

    public void osEncontrada()
    {
        String titulo = "Procurar Cliente";
        
        int numeroOS = Integer.parseInt(tProcurar.getText());
        try
        {
            OrdemServico OS = Oficina.buscarOS(numeroOS);
            
            DefaultTableModel tabela = (DefaultTableModel)this.tabelaOS.getModel();
        
            while(tabela.getRowCount() > 0)
            {
                tabela.removeRow(0);
            }
            
            String numOS;
            String dataOS;
            String dataPrev;
            String dataTermino;
            String placa;
            String situacao = "";
            String valor;
            String proprietario;
            
            numOS = OS.getNumeroOS()+"";
            dataOS = OS.getDataOS().toString();
            dataPrev = OS.getDataPrevTermino().toString();
            if(OS.getDataTermino()==null)
            {
                dataTermino = "null";
            }else{
                dataTermino = OS.getDataTermino().toString();
            } 
            placa = OS.getPlacaCarro();
            if(OS.getSituação()=='A')
            {
                situacao = "Aberta";
            }else if(OS.getSituação()=='C'){
                situacao = "Cancelada";
            }else if(OS.getSituação()=='F'){
                situacao = "Finalizada";
            }
            valor = OS.getValorOS()+"";
            proprietario = OS.getCliente().getNome();
            
            Object[] dados = {numOS,dataOS,dataPrev,dataTermino,placa,situacao,
                valor,proprietario};
            tabela.addRow(dados);
            
        }catch(OSNaoEncontradaException ex){
            Interface.exibirMensagemErro(titulo, ex.getMessage());
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAbrirOS;
    private javax.swing.JButton bExcluir;
    private javax.swing.JButton bGerenciar;
    private javax.swing.JButton bProcurar;
    private javax.swing.JButton bResetar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tProcurar;
    private javax.swing.JTable tabelaOS;
    // End of variables declaration//GEN-END:variables
}
